[1,["61ae1fb8-73fe-4e7f-8b48-a0f98b360a51","7f9393dc-4229-433c-b12b-4fe57b960dd0","af3ee49b-2f06-4557-b746-327093800e2b@ec3ee","e09e613e-0c7e-4c3a-924e-adfbd3e9ae62","af3ee49b-2f06-4557-b746-327093800e2b@d4f24","af3ee49b-2f06-4557-b746-327093800e2b@38f26","47f17293-dab3-4e48-aa13-7461d7b100ad@998d0","b095aaa5-c2ae-4511-9cc2-862654680f3e","47f17293-dab3-4e48-aa13-7461d7b100ad@f6c0a","e24d5edb-4add-40b3-b598-0a5bda21ac20"],["node","_customMaterial","_spriteFrame","root","_font","data","target","source","asset","_effectAsset","skillNameLabel"],[["cc.Node",["_name","_layer","_active","_objFlags","__editorExtras__","_prefab","_components","_parent","_lpos","_children","_lscale","_lrot","_euler"],-2,4,12,1,5,2,5,5,5],["cc.Node",["_name","_layer","_active","_components","_prefab","_parent","_lpos","_children","_lrot","_euler"],0,9,4,1,5,2,5,5],["cc.Sprite",["_sizeMode","_type","_isTrimmedMode","_fillStart","_fillType","_fillRange","node","__prefab","_customMaterial","_spriteFrame","_fillCenter"],-3,1,4,6,6,5],["cc.UITransform",["node","__prefab","_anchorPoint","_contentSize"],3,1,4,5,5],["cc.Widget",["_alignFlags","_top","_enabled","_alignMode","node","__prefab"],-1,1,4],["01fae5eHU5B+K+wuyXxoUra",["_string","_actualFontSize","_fontSize","_isSystemFontUsed","_isItalic","_enableOutline","_artLabelType","node","__prefab","_outlineColor","_colors","_customMaterial","_font"],-4,1,4,5,12,6,6],["sp.Skeleton",["_preCacheMode","loop","node","__prefab"],1,1,4],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["cc.CylinderCollider",["_radius","_height","node","__prefab"],1,1,4],["cc.RigidBody",["_group","_allowSleep","_useGravity","node","__prefab","_linearFactor","_angularFactor"],0,1,4,5,5],["cc.UIOpacity",["node","__prefab"],3,1,4],["cc.PrefabInfo",["fileId","instance","root","asset","targetOverrides","nestedPrefabInstanceRoots"],1,1,1,9,2],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.PrefabInfo",["fileId","targetOverrides","nestedPrefabInstanceRoots","root","instance","asset"],0,1,4,6],["cc.TargetOverrideInfo",["propertyPath","source","target","targetInfo"],2,1,1,4],["cc.TargetInfo",["localID"],2],["cc.PrefabInstance",["fileId","prefabRootNode","mountedComponents","propertyOverrides"],2,1,9,9],["cc.MountedComponentsInfo",["components","targetInfo"],2,4],["cc.MountedComponentsInfo",["targetInfo","components"],3,4,2],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["cc.ProgressBar",["_mode","_progress","node","__prefab","_barSprite"],1,1,4,1],["e0ff14a+PtJx7B3e0pULXOm",["node","__prefab","skeRole","skeHit","skeBullet","skeSkill","hpProgress","hpProgressBg","damageEffect","spReviveTimerBg","pbReviveTimer"],3,1,4,1,1,1,1,1,1,1,1,1],["cc.Material",["_name","_props","_states","_defines"],-1],["a0ae0BzBHVNwabwuXju0Gi6",["node","__prefab","skillNameLabel"],3,1,4,1],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[8,0,2],[13,0,1,2,3,4,5,5],[16,0,2],[3,0,1,3,1],[21,0,1,2,2],[0,0,1,7,6,5,8,3],[3,0,1,2,1],[3,0,1,1],[6,0,2,3,2],[7,0,2],[0,0,2,1,7,6,5,4],[11,0,1,1],[2,0,6,7,8,9,2],[4,0,4,5,2],[19,0,1,1],[5,0,1,2,3,4,5,6,7,8,9,10,8],[0,0,1,9,6,5,8,10,3],[0,0,1,7,9,6,5,11,12,3],[0,3,4,7,5,3],[0,0,2,1,7,6,5,8,4],[0,0,1,7,6,5,3],[1,0,1,5,7,3,4,6,3],[1,0,2,1,5,7,3,4,6,4],[1,0,1,5,3,4,6,3],[1,0,1,5,3,4,6,8,9,3],[1,0,1,7,3,4,8,9,3],[1,0,1,5,3,4,3],[3,0,1,3,2,1],[9,0,1,2,3,3],[10,0,1,2,3,4,5,6,4],[12,0,1,2,3,4,5,3],[14,0,1,2,3,4,5,4],[15,0,1,2,3,2],[2,1,0,6,7,8,9,3],[2,0,2,6,7,8,9,3],[2,1,0,3,6,7,8,9,4],[2,1,4,0,3,5,2,6,7,10,7],[2,0,6,7,2],[4,2,0,1,3,4,5,5],[4,0,1,4,5,3],[17,0,1,2,3,2],[18,0,1,2],[20,0,1,2,3],[5,0,1,2,3,4,5,6,7,8,9,10,11,12,8],[22,0,1,2,3,4,3],[6,0,1,2,3,3],[23,0,1,2,3,4,5,6,7,8,9,10,1],[24,0,1,2,3,5],[25,0,1,2,1],[26,0,1,2,4]],[[[[9,"HangUpPlayer"],[16,"HangUpPlayer",8388608,[-10,-11,-12],[[[6,-5,[0,"ee7dgyLKVNvopsiq3jryig"],[0,0.5,0.039692110242692855]],-6,[28,80,600,-7,[0,"43s4Eux6FHloCz04wajIal"]],[29,2,false,false,-8,[0,"11wJMdJ91Ka7lKgTiHeIHI"],[1,1,0,1],[1,1,0,1]],[11,-9,[0,"aaFbHWf61AgY4XsxcJ6JFb"]]],4,1,4,4,4],[30,"43rAbaEo1KEaK4zoymOBNe",null,-4,0,[[32,["skillShow"],-3,-2,[2,["3c/Wr620hKN5buVfa+a4ZY"]]]],[-1]],[1,0,5,0],[1,0.1,0.1,0.1]],[17,"skeRole",8388608,1,[-15,-16,-17,-18,-19],[[[6,-13,[0,"a1d0KAIAlJhYIfRpLBQdii"],[0,0.5,0.10174147411084576]],-14],4,1],[1,"55F/+JiZ9F6JamqTGkRv3t",null,null,null,1,0],[3,-0.2588190451025207,0,0,0.9659258262890683],[1,-29.999999999999993,0,0]],[21,"HP",8388608,2,[-23],[[3,-20,[0,"82K9Ic1UtJ44ETAqoCeD5e"],[5,190,20]],[33,1,0,-21,[0,"b5c5HXCLhJW63MMVxnq3DR"],2,3],[38,false,1,-27.657105377197695,1,-22,[0,"7bmMPqZglPOrdIbT6rqkBj"]]],[1,"8dW9uKBeZFQL1zfB02o2GW",null,null,null,1,0],[1,1.3642420526593924e-12,420.16880886840863,1.1309999999994034]],[22,"spReviveBg",false,8388608,2,[-27],[[3,-24,[0,"08mA6tkYpAWLWSuhTr72jn"],[5,136.7,136.7]],[34,0,false,-25,[0,"08bpoX7aJNtICVkGU6yhTC"],4,5],[39,1,97.05000000000001,-26,[0,"aavK3dYHxAk5RLTdg0f/Cw"]]],[1,"85SmbTNsVFkpSja+BfP+Os",null,null,null,1,0],[1,4.547473508864641e-13,237.11170349121096,4.547473508864641e-13]],[18,0,{},1,[31,"e5dTS+G+dLjqwEUgWt6Rx0",null,null,-30,[40,"b1uS6GfM5JwbfwmhpoD4Ul",1,[[41,[null],[2,["e5dTS+G+dLjqwEUgWt6Rx0"]]],[14,[2,["1bEqoFDOlGw5zuYa91r4Am"]],[-28]],[14,[2,["bbQttrRMZF06jO2oQyb69k"]],[-29]]],[[42,"HangUpSkillShow",["_name"],[2,["e5dTS+G+dLjqwEUgWt6Rx0"]]],[4,["_lpos"],[2,["e5dTS+G+dLjqwEUgWt6Rx0"]],[1,0,0,0]],[4,["_lrot"],[2,["e5dTS+G+dLjqwEUgWt6Rx0"]],[3,-0.3420201433256687,0,0,0.9396926207859084]],[4,["_euler"],[2,["e5dTS+G+dLjqwEUgWt6Rx0"]],[1,-40,0,0]],[4,["_lpos"],[2,["1bEqoFDOlGw5zuYa91r4Am"]],[1,-1.1368683772161603e-13,0,1.1368683772161603e-13]],[4,["_lpos"],[2,["bbQttrRMZF06jO2oQyb69k"]],[1,7.412999999999897,0,1.1368683772161603e-13]]]],6]],[23,"Progress",8388608,3,[[27,-31,[0,"8dr62gdBhJXpUePzhh1Iry"],[5,188,18],[0,0,0.5]],[35,1,0,0.9,-32,[0,"21W6zP2uJARIJSjtrZbWU1"],0,1],[13,8,-33,[0,"95gaaMnixJCJLMmHHwJ9YQ"]]],[1,"e6z8y+/yVNfZYX7kd/Cpph",null,null,null,1,0],[1,-95,0,1]],[5,"ReviveTimer",8388608,4,[[[3,-34,[0,"40GYBmSqNHEIi6o2sQWekb"],[5,87.1,87.1]],-35,-36],4,1,1],[1,"252M/CzdJKS43uoHPCudSl",null,null,null,1,0],[1,-1.0000000000004547,1,0]],[19,"skeHit",false,8388608,2,[[[6,-37,[0,"44yqmqngZHZbWxx+qQBFAo"],[0,0.5,0.19296688246529595]],-38,[13,18,-39,[0,"92G1RMKLJHkaCT+qCLW0fh"]]],4,1,4],[1,"67ZvziTm1HJIJKHMz4UZYH",null,null,null,1,0],[1,-17.216888427734375,169.67015855292613,0]],[10,"skeBullet",false,8388608,2,[[[7,-40,[0,"34KzdrFfdAJ7vpeEJ+LuYw"]],-41],4,1],[1,"63WBj783hCC7tKSMB8PEq/",null,null,null,1,0]],[10,"skeSkill",false,8388608,2,[[[7,-42,[0,"99BKVs9NlCho9QV1ux96wc"]],-43],4,1],[1,"16dlkx04FKH4AfNmMmvkf8",null,null,null,1,0]],[24,"damageEffect",8388608,1,[[7,-44,[0,"6d5YyQnERLOqeiWbHs7bU9"]]],[1,"53RRv80j1EdoVxMFPANCXh",null,null,null,1,0],[1,0,100,0],[3,-0.25881904510252074,0,0,0.9659258262890683],[1,-30,0,0]],[20,"BG",262144,5,[[[3,-45,[0,"f4g3iRffJFBpnMY0OTVgZU"],[5,180,58]],[12,2,-46,[0,"32pDP/bXJIjpZVPGd9zVZq"],7,8],-47],4,4,1],[1,"1bEqoFDOlGw5zuYa91r4Am",null,null,null,1,0]],[5,"Value",262144,5,[[[3,-48,[0,"7fCfIa9qhOt6HCj1guwx2V"],[5,130.3766968425967,54.4]],[43,"猎命乌刀",30,30,false,true,true,1,-49,[0,"19Mwj2uSVA4pawLptQMufI"],[4,4278800105],[[[4,4288471807],[4,4288471807],[4,4293656571],[4,4293656571]],8,8,8,8],9,10],-50],4,4,1],[1,"bbQttrRMZF06jO2oQyb69k",null,null,null,1,0],[1,7.412999999999897,0,1.1368683772161603e-13]],[36,3,2,0,0.25,0.6,false,7,[0,"76X/DGdxFJhYSffRVst/XV"],[0,0.5,0.5]],[44,2,0.6,7,[0,"708Y9Iw7pByp/YA0D4r0iE"],14],[8,0,9,[0,"01tOyA51hG567XZCbodRp1"]],[8,0,8,[0,"0eSLjkilhGtJtsW1a9FJJ+"]],[45,0,false,10,[0,"81HzOGXv1O6ax6/Xgjd1mD"]],[8,0,2,[0,"61nlcdYW1HspNU9oyFYemc"]],[37,2,12,[0,"32pDP/bXJIjpZVPGd9zVZq"]],[15,"猎命乌刀",30,30,false,true,true,1,13,[0,"19Mwj2uSVA4pawLptQMufI"],[4,4278800105],[[[4,4288471807],[4,4288471807],[4,4293656571],[4,4293656571]],8,8,8,8]],[46,1,[0,"36EP/1goVJdJl1mZI6GYpF"],19,17,16,18,6,3,11,4,15]],0,[0,-1,5,0,6,5,0,7,22,0,3,1,0,0,1,0,-2,22,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,11,0,-3,5,0,0,2,0,-2,19,0,-1,3,0,-2,4,0,-3,9,0,-4,8,0,-5,10,0,0,3,0,0,3,0,0,3,0,-1,6,0,0,4,0,0,4,0,0,4,0,-1,7,0,-1,20,0,-1,21,0,3,5,0,0,6,0,0,6,0,0,6,0,0,7,0,-2,14,0,-3,15,0,0,8,0,-2,17,0,0,8,0,0,9,0,-2,16,0,0,10,0,-2,18,0,0,11,0,0,12,0,0,12,0,-3,20,0,0,13,0,0,13,0,-3,21,0,5,1,50],[0,0,0,0,0,0,0,0,0,0,0,14,14,16,17,18,19,20,20,21,21],[1,2,1,2,1,2,8,1,2,1,4,1,2,1,1,1,1,1,2,1,4],[1,4,1,5,1,6,7,0,2,0,3,0,8,0,0,0,0,0,2,0,3]],[[[47,"spine_ui",[{}],[{"rasterizerState":{},"depthStencilState":{"depthTest":true},"blendState":{"targets":[{}]}}],[{"OPEN_SURFACE":true,"USE_TEXTURE":true}]]],0,0,[0],[9],[9]],[[[9,"HangUpSkillShow"],[25,"HangUpSkillShow",262144,[-6,-7],[[3,-2,[0,"43u0RrlVROYIj1vJrvlJVA"],[5,99.67999267578125,48.32]],[48,-4,[0,"3c/Wr620hKN5buVfa+a4ZY"],-3],[11,-5,[0,"0eITul0H1Nf4CCCZE69SDf"]]],[1,"e5dTS+G+dLjqwEUgWt6Rx0",null,null,null,-1,0],[3,-0.3420201433256687,0,0,0.9396926207859084],[1,-40,0,0]],[26,"BG",262144,1,[[3,-8,[0,"f4g3iRffJFBpnMY0OTVgZU"],[5,180,58]],[12,2,-9,[0,"32pDP/bXJIjpZVPGd9zVZq"],0,1]],[1,"1bEqoFDOlGw5zuYa91r4Am",null,null,null,1,0]],[5,"Value",262144,1,[[[3,-10,[0,"7fCfIa9qhOt6HCj1guwx2V"],[5,130.3766968425967,54.4]],-11],4,1],[1,"bbQttrRMZF06jO2oQyb69k",null,null,null,1,0],[1,7.412999999999897,0,1.1368683772161603e-13]],[15,"猎命乌刀",30,30,false,true,true,1,3,[0,"19Mwj2uSVA4pawLptQMufI"],[4,4278800105],[[[4,4288471807],[4,4288471807],[4,4293656571],[4,4293656571]],8,8,8,8]]],0,[0,3,1,0,0,1,0,10,4,0,0,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,2,0,0,3,0,-2,4,0,5,1,11],[0,0,4,4],[1,2,1,4],[0,2,0,3]],[[[49,"../gui_common/material/spine_ui",[{"hash":1392007967,"name":"../gui_common/material/spine_ui|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"angleX","type":13,"count":1},{"name":"angleY","type":13,"count":1},{"name":"angleZ","type":13,"count":1}],"defines":[]},{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":1,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"angleX","type":13,"count":1},{"name":"angleY","type":13,"count":1},{"name":"angleZ","type":13,"count":1}],"defines":[]},{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":1,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\n  layout(std140) uniform Constants {\n    float angleX;\n    float angleY;\n    float angleZ;\n  };\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n        pos = cc_matWorld * pos;\n    #endif\n    #if OPEN_SURFACE\n        pos.y -= pos.z * pos.z * 0.001;\n    #endif\n    #if USE_PIXEL_ALIGNMENT\n        pos = cc_matView * pos;\n        pos.xyz = floor(pos.xyz);\n        pos = cc_matProj * pos;\n    #else\n        pos = cc_matViewProj * pos;\n    #endif\n    uv0 = a_texCoord;\n    #if SAMPLE_FROM_RT\n        uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n    #endif\n    color = a_color;\n    return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag() {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n        pos = cc_matWorld * pos;\n    #endif\n    #if OPEN_SURFACE\n        pos.y -= pos.z * pos.z * 0.001;\n    #endif\n    #if USE_PIXEL_ALIGNMENT\n        pos = cc_matView * pos;\n        pos.xyz = floor(pos.xyz);\n        pos = cc_matProj * pos;\n    #else\n        pos = cc_matViewProj * pos;\n    #endif\n    uv0 = a_texCoord;\n    #if SAMPLE_FROM_RT\n        uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n    #endif\n    color = a_color;\n    return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag() {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":59,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":1}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"OPEN_SURFACE","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"IS_GRAY","type":"boolean"}]}],[{"passes":[{"program":"../gui_common/material/spine_ui|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"angleX":{"type":13,"value":[0]},"angleY":{"type":13,"value":[0]},"angleZ":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]]]]
